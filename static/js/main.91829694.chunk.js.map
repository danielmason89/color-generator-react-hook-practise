{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["rgbToHex","SingleColor","rgb","weight","index","hexColor","useState","bcg","join","hexValue","className","style","backgroundColor","App","color","setColor","error","setError","list","setList","onSubmit","e","preventDefault","colors","Values","all","console","log","type","value","onChange","target","placeholder","map","key","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLASeA,ICYAC,EAlBK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBAElDC,GAFkD,UAE5CL,EAAIM,KAAK,MACfC,EAAQ,WAAOJ,GAIrB,OACE,6BACEK,UAAS,gBAAWN,EAAQ,IAAM,eAClCO,MAAO,CAAEC,gBAAgB,OAAD,OAASL,EAAT,OAExB,uBAAGG,UAAU,iBAAiBP,EAA9B,KACA,uBAAGO,UAAU,eAAeD,K,gBCwCnBI,MAnDf,WAAgB,IAAD,EACaP,mBAAS,IADtB,mBACNQ,EADM,KACCC,EADD,OAEaT,oBAAS,GAFtB,mBAENU,EAFM,KAECC,EAFD,OAGWX,mBAAS,IAHpB,mBAGNY,EAHM,KAGAC,EAHA,KAkBb,OACE,oCACE,6BAAST,UAAU,aACjB,mDACA,0BAAMU,SAjBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIC,IAAOV,GAAOW,IAAI,IACnCN,EAAQI,GACRN,GAAS,GACT,MAAOD,GACPC,GAAS,GAETS,QAAQC,IAAIX,MASR,2BACEY,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEU,OAAOF,QACnCG,YAAY,UACZtB,UAAS,UAAKM,EAAQ,QAAU,QAElC,4BAAQN,UAAU,MAAMkB,KAAK,UAA7B,YAKJ,6BAASlB,UAAU,UAChBQ,EAAKe,KAAI,SAACnB,EAAOV,GAChB,OACE,kBAAC,EAAD,eACE8B,IAAK9B,GACDU,EAFN,CAGEV,MAAOA,EACPC,SAAUS,EAAMqB,aC1C9BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.91829694.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(\",\");\n  const hexValue = `#${hexColor}`;\n  // For reference can use either hex or hexColor..\n  // const hex = rgbToHex(...rgb);\n\n  return (\n    <article\n      className={`color ${index > 10 && \"color-light\"}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n    >\n      <p className=\"percent-value\">{weight}%</p>\n      <p className=\"color-value\">{hexValue}</p>\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [list, setList] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      setList(colors);\n      setError(false);\n    } catch (error) {\n      setError(true);\n\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>Color Generator App</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"type\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            placeholder=\"#f105ad\"\n            className={`${error ? \"error\" : null}`}\n          />\n          <button className=\"btn\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return (\n            <SingleColor\n              key={index}\n              {...color}\n              index={index}\n              hexColor={color.hex}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}